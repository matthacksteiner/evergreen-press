---
import Picture from '@components/Picture.astro';
const { global, image, loading, class: className } = Astro.props;
const baseSize = 16;
const gridBlockMobile =
	global.gridBlockMobile / baseSize
		? global.gridBlockMobile / baseSize + 'rem'
		: '16px';
const gridBlockDesktop =
	global.gridBlockDesktop / baseSize
		? global.gridBlockDesktop / baseSize + 'rem'
		: '16px';

const fileCaption = image.filecaption;
const fileToggle = image.filetoggle;
const Filelevel = image.filelevel;
const fileTextFont = image.filetextfont;
const fileTextSize = image.filetextsize;
const fileTextColor = image.filetextcolor;
const fileTextAlign = image.filetextalign;
const fileOverlay = image.fileoverlay;
const captionAlign = image.captionalign;

const pictureProps = {
	src: image.url,
	srcsetMobile: image.srcsetMobile,
	srcset: image.srcset,
	alt: image.alt,
	width: image.width,
	height: image.height,
	loading: loading,
	class: `${className} w-full object-cover`,
};
---

{
	captionAlign === 'center' ? (
		<div>
			<div class={`relative  ${fileOverlay === 'overlay' ? 'overlay' : null}`}>
				<Picture {...pictureProps} />
				{fileToggle ? (
					<div class="text-content absolute left-2/4 top-2/4 z-[1] w-4/5 max-w-[75%] -translate-x-2/4 -translate-y-2/4">
						<Filelevel
							set:html={fileCaption}
							class:list={[
								`caption font--${fileTextSize}`,
								`text--${fileTextColor}`,
								`text--${fileTextAlign}`,
							]}
						/>
					</div>
				) : null}
			</div>
		</div>
	) : (
		<div>
			<div class={`relative ${fileOverlay === 'overlay' ? 'overlay' : null}`}>
				<Picture {...pictureProps} />
			</div>
			{fileToggle ? (
				<div class="text-content z-[1]">
					<Filelevel
						set:html={fileCaption}
						class:list={[
							`caption font--${fileTextSize}`,
							`text--${fileTextColor}`,
							`text--${fileTextAlign}`,
						]}
					/>
				</div>
			) : null}
		</div>
	)
}

<style
	lang="css"
	define:vars={{ fileTextFont, gridBlockMobile, gridBlockDesktop }}
>
	.text-content {
		@apply mt-[var(--gridBlockMobile)] lg:mt-[var(--gridBlockDesktop)];
	}
	.caption {
		font-family: var(--font);
	}
	.overlay:before {
		@apply absolute left-0 top-0 h-full w-full bg-[rgba(_0,0,0,0.25_)] content-[''];
	}
</style>
