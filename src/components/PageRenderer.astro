---
import { getPage, getData, type PageData, type GlobalData } from '@lib/api';
import BaseLayout from '@layouts/BaseLayout.astro';
import Layouts from '@components/Layouts.astro';
import Section from '@components/Section.astro';

interface Props {
	slug: string;
	lang?: string;
	data?: PageData;
	global?: GlobalData;
	page?: any;
}

const { slug, lang, data: propsData, global: propsGlobal, page } = Astro.props;

// Use provided data or fetch it
let data: PageData;
let global: GlobalData;

if (propsData && propsGlobal) {
	data = propsData;
	global = propsGlobal;
} else {
	data = await getPage(slug, lang);
	global = lang
		? await getData<GlobalData>(`/${lang}/global.json`)
		: await getData<GlobalData>('/global.json');
}

const pageTitle = data.title;

// Check if this is a section page with pagination
const isSectionPage = data.intendedTemplate === 'section' && page;
---

<BaseLayout pageTitle={pageTitle} data={data} global={global}>
	{
		isSectionPage ? (
			<Section data={data} page={page} global={global} />
		) : (
			<Layouts layouts={data.layouts} data={data} global={global} />
		)
	}
	{
		Astro.url.pathname.includes('/preview/') && (
			<div class="fixed bottom-4 right-4 z-40 rounded-lg bg-red-600 px-3 py-1 font-medium text-white shadow-md">
				Preview Mode
			</div>
		)
	}
</BaseLayout>
