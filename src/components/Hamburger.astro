---
import LanguagePicker from './LanguagePicker.astro';
const { data, global } = Astro.props;
const { slug } = Astro.params;
const origin = Astro.url.origin;
const currentPath = slug ? slug : '';

const defaultLang = global.defaultLang.code;
const currentLang = data.lang;

const hamburgerFont = global.hamburgerFont;
const hamburgerFontSize = global.hamburgerFontSize;
const hamburgerFontColor = global.hamburgerFontColor;
const hamburgerMenuColor = global.hamburgerMenuColor;
const hamburgerMenuColorActive = global.hamburgerMenuColorActive;
const hamburgerOverlay = global.hamburgerOverlay;

const logoAlign = global.logoAlign;
---

{
	global.navHamburger ? (
		<button
			class={`c-hamburger c-hamburger--chop hamburgerColor--${hamburgerMenuColor} hamburgerColorActive--${hamburgerMenuColorActive} relative z-20 flex-grow ${
				logoAlign === 'left' ? 'lg:hidden' : ''
			}`}
			aria-label="hamburger-button"
			type="button"
		>
			<div class={`c-hamburger-inner`}>
				<span class="c-hamburger-bar" />
				<span class="c-hamburger-bar" />
				<span class="c-hamburger-bar" />
			</div>
		</button>
	) : null
}
<div
	class={`mobile-nav-list flex flex-col items-center invisible text--${hamburgerFontColor} bg--${hamburgerOverlay} font--${hamburgerFontSize} top-0 left-0  mr-24 flex min-h-full w-full flex-col justify-center text-center opacity-0 transition-opacity delay-100 duration-300 ease-in-out placeholder:pointer-events-none fixed ${
		logoAlign === 'left' ? 'lg:hidden' : ''
	}`}
>
	{
		global.navHamburger &&
			global.navHamburger.map((item) => {
				if (item.type === 'url') {
					return (
						<a
							href={item.href}
							target={`${item.popup === true ? '_blank' : '_self'}`}
							rel={`${item.popup === true ? 'noopener noreferrer' : ''}`}
							class={`mobile-nav-link gap-8 `}
						>
							{item.title}
						</a>
					);
				}

				if (item.type === 'page') {
					return (
						<a
							href={
								item.hash
									? `${
											currentLang !== defaultLang
												? origin + '/' + currentLang
												: ''
									  }/${item.uri}#${item.hash}`
									: `${
											currentLang !== defaultLang
												? origin + '/' + currentLang
												: ''
									  }/${item.uri}`
							}
							target={item.popup ? '_blank' : undefined}
							rel={item.popup ? 'noopener' : undefined}
							class={`mobile-nav-link mb-8 ${
								currentPath === item.uri ? 'active' : ''
							}  `}
						>
							{item.title}
						</a>
					);
				}
			})
	}
	<LanguagePicker global={global} font={hamburgerFont} class="lg:hidden" />
</div>

<style lang="css" define:vars={{ hamburgerFont }}>
	.mobile-nav-list {
		font-family: var(--hamburgerFont);
	}

	.expanded {
		@apply pointer-events-auto visible opacity-100;
	}

	.active {
		@apply font-semibold;
	}
	.hamburgerColor--primary {
		--hamburger-color: var(--colorPrimary);
		--hamburger-color-hover: var(--colorPrimary);
	}

	.hamburgerColor--secondary {
		--hamburger-color: var(--colorSecondary);
		--hamburger-color-hover: var(--colorSecondary);
	}

	.hambugerColor--tertiary {
		--hamburger-color: var(--colorTertiary);
		--hamburger-color-hover: var(--colorTertiary);
	}

	.hamburgerColor--white {
		--hamburger-color: var(--colorWhite);
		--hamburger-color-hover: var(--colorWhite);
	}

	.hamburgerColor--black {
		--hamburger-color: var(--colorBlack);
		--hamburger-color-hover: var(--colorBlack);
	}

	.hamburgerColor--transparent {
		--hamburger-color: var(--colorTransparent);
		--hamburger-color-hover: var(--colorTransparent);
	}

	.hamburgerColorActive--primary {
		--hamburger-color-active: var(--colorPrimary);
	}

	.hamburgerColorActive--secondary {
		--hamburger-color-active: var(--colorSecondary);
	}

	.hamburgerColorActive--tertiary {
		--hamburger-color-active: var(--colorTertiary);
	}

	.hamburgerColorActive--white {
		--hamburger-color-active: var(--colorWhite);
	}

	.hamburgerColorActive--black {
		--hamburger-color-active: var(--colorBlack);
	}
	.hamburgerColorActive--transparent {
		--hamburger-color-active: var(--colorTransparent);
	}
</style>

<script>
	const hamburger = document.querySelector('.c-hamburger');
	const menu = document.querySelector('.mobile-nav-list');
	const navLinks = document.querySelectorAll('.mobile-nav-link');
	const body = document.querySelector('body');

	hamburger?.addEventListener('click', () => {
		menu.classList.toggle('expanded');
		hamburger.classList.toggle('active');
		body.style.overflowY =
			body.style.overflowY === 'hidden' ? 'auto' : 'hidden';
	});

	navLinks.forEach((link) => {
		link.addEventListener('click', () => {
			menu.classList.remove('expanded');
			hamburger.classList.remove('active');
			body.style.overflowY = 'auto';
		});
	});
</script>
