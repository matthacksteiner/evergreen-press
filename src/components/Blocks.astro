---
import BlockText from '@blocks/BlockText.astro';
import BlockDivider from '@blocks/BlockDivider.astro';
const { blocks } = Astro.props;
---

{
	blocks ? (
		blocks.map((block) => {
			switch (block.type) {
				case 'blockText':
					return (
						<BlockText
							text={block.content.text}
							textFont={block.content.textfont}
							textSize={block.content.textsize}
							textAlign={block.content.textalign}
							backgroundContainer={block.content.backgroundcontainer}
							backgroundColor={block.content.backgroundcolor}
							widthMobile={block.content.widthmobile}
							startMobile={block.content.startmobile}
							widthDesktop={block.content.widthdesktop}
							startDesktop={block.content.startdesktop}
							spacingMobileTop={block.content.spacingmobiletop + 'px'}
							spacingMobileBottom={block.content.spacingmobilebottom + 'px'}
							spacingDesktopTop={block.content.spacingdesktoptop + 'px'}
							spacingDesktopBottom={block.content.spacingdesktopbottom + 'px'}
						/>
					);
				case 'blockDivider':
					return (
						<BlockDivider
							spacingMobileTop={block.content.spacingmobiletop + 'px'}
							spacingMobileBottom={block.content.spacingmobilebottom + 'px'}
							spacingDesktopTop={block.content.spacingdesktoptop + 'px'}
							spacingDesktopBottom={block.content.spacingdesktopbottom + 'px'}
						/>
					);

				default:
					return null;
			}
		})
	) : (
		<section class="container">
			<p>Kein Bl√∂cke gefunden.</p>
		</section>
	)
}
