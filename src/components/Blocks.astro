---
import BlockText from '@blocks/BlockText.astro';
import BlockDivider from '@blocks/BlockDivider.astro';
import BlockImage from '@blocks/BlockImage.astro';
import BlockTitle from '@blocks/BlockTitle.astro';
import BlockSlider from '@blocks/BlockSlider.astro';
import BlockButton from '@blocks/BlockButton.astro';

const { blocks, global } = Astro.props;
---

{
	blocks ? (
		blocks.map((block) => {
			switch (block.type) {
				case 'button':
					return <BlockButton link={block.content.link} global={global} />;
				case 'title':
					return (
						<BlockTitle
							title={block.content.text}
							font={block.content.textfont}
							color={block.content.textcolor}
							size={block.content.textsize}
							align={block.content.textalign}
							Level={block.content.level}
						/>
					);
				case 'text':
					return (
						<BlockText
							text={block.content.text}
							font={block.content.textfont}
							color={block.content.textcolor}
							size={block.content.textsize}
							align={block.content.textalign}
						/>
					);
				case 'image':
					return (
						<BlockImage
							image={block.content.image}
							link={block.content.linkexternal}
							toggle={block.content.toggle}
							ratioMobile={block.content.ratiomobile}
							ratioDesktop={block.content.ratio}
						/>
					);
				case 'slider':
					return (
						<BlockSlider
							images={block.content.images}
							toggle={block.content.toggle}
							Level={block.content.level}
							text={block.content.caption}
							font={block.content.textfont}
							textcolor={block.content.textcolor}
							size={block.content.textsize}
							align={block.content.textalign}
							ratioMobile={block.content.ratiomobile}
							ratioDesktop={block.content.ratio}
							controls={block.content.controls}
							color={block.content.color}
							time={block.content.time}
						/>
					);
				case 'divider':
					return (
						<BlockDivider
							spacingMobileTop={block.content.spacingmobiletop + 'px'}
							spacingMobileBottom={block.content.spacingmobilebottom + 'px'}
							spacingDesktopTop={block.content.spacingdesktoptop + 'px'}
							spacingDesktopBottom={block.content.spacingdesktopbottom + 'px'}
						/>
					);

				default:
					return null;
			}
		})
	) : (
		<section class="container">
			<p>Kein BlÃ¶cke gefunden.</p>
		</section>
	)
}
