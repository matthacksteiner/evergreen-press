---
const { link, class: className, ...rest } = Astro.props;
const { lang } = Astro.params;
const currentLang = lang;

if (!link) {
	throw new Error('Missing link prop in Link.astro');
}

let href = '';
switch (link.type) {
	case 'url':
		href = link.href;
		break;
	case 'page':
		href = link.hash
			? `${currentLang ? `/${currentLang}/` : ''}${link.uri}#${link.hash}`
			: `${currentLang ? `/${currentLang}/` : ''}${link.uri}`;
		break;
	case 'file':
		href = link.href;
		break;
	case 'email':
		href = link.href;
		break;
	case 'tel':
		href = `tel:${link.href}`;
		break;
	default:
		href = link.href;
}

const attributes = {
	href,
	...(link.popup ? { target: '_blank', rel: 'noopener' } : {}),
	...(link.type === 'file' ? { download: '' } : {}),
};

const defaultContent = link.title
	? link.title
	: link.type === 'page'
	? link.uri
	: link.href;
---

<a {...attributes} {...rest} class:list={[className]}>
	<slot>{defaultContent}</slot>
</a>
