---
import Columns from '@components/Columns.astro';
import ScrollButton from '@components/ScrollButton.astro';
const { global, layouts } = Astro.props;
---

{
	layouts &&
		layouts.map((layout) => {
			const columns = layout.content.columns;
			const anchor = layout.anchor;
			const classes = layout.classes;
			const backgroundColor = layout.backgroundColor || 'transparent';
			const backgroundPadding = layout.backgroundPadding || 'both';
			const backgroundContainer = layout.backgroundContainer;
			const backgroundContainerColor =
				layout.backgroundContainerColor || 'transparent';
			const backgroundHeight = layout.backgroundHeight;
			const backgroundAlignVertical = layout.backgroundAlignVertical;
			const backgroundAlignHorizontal = layout.backgroundAlignHorizontal;
			const backgroundAlignItemsVertical = layout.backgroundAlignItemsVertical;
			const backgroundArrow = layout.backgroundArrow;
			const backgroundArrowColor = layout.backgroundArrowColor;
			const backgroundArrowSize = layout.backgroundArrowSize;
			const spacingMobileTop = layout.spacingMobileTop;
			const spacingMobileBottom = layout.spacingMobileBottom;
			const spacingDesktopTop = layout.spacingDesktopTop;
			const spacingDesktopBottom = layout.spacingDesktopBottom;
			const sectionProps = anchor ? { id: anchor } : {};
			return (
				<section
					{...sectionProps}
					class={`columns bg--${backgroundColor} align-vert--${backgroundAlignVertical} align-hor--${backgroundAlignHorizontal}
						${
							backgroundHeight === 'full'
								? 'flex min-h-screen'
								: backgroundHeight === 'half'
								? 'h-screenHalf flex'
								: 'auto'
						} ${classes}`}
				>
					<div
						class={`grid-default bg--${backgroundContainerColor} ${backgroundContainer} spacingMobileTop--${spacingMobileTop} spacingMobileBottom--${spacingMobileBottom} spacingDesktopTop--${spacingDesktopTop} spacingDesktopBottom--${spacingDesktopBottom}
						align-vert--${backgroundAlignItemsVertical}`}
					>
						<Columns
							columns={columns}
							global={global}
							backgroundPadding={backgroundPadding}
							backgroundContainer={backgroundContainer}
						/>
					</div>
					<ScrollButton
						controls={backgroundArrow}
						color={backgroundArrowColor}
						size={backgroundArrowSize}
					/>
				</section>
			);
		})
}
