---
import { toRem } from '@lib/helpers.js';
import Link from '@components/Link.astro';
const { link, global, align, className, metadata } = Astro.props;
const buttonFont = global.buttonFont;
const size = global.buttonFontSize;
const buttonPadding = toRem(global.buttonPadding);
const bg = global.buttonBackgroundColor;
const bgActive = global.buttonBackgroundColorActive;
const color = global.buttonTextColor;
const colorActive = global.buttonTextColorActive;
const buttonBorderColor = global.buttonBorderColor;
const buttonBorderColorActive = global.buttonBorderColorActive;
const buttonBorderWidth = toRem(global.buttonBorderWidth);
const buttonBorderRadius =
	link.title && link.title.length === 1
		? '50%'
		: toRem(global.buttonBorderRadius);
---

<div
	id={metadata?.identifier || undefined}
	class:list={[
		'blockButton',
		'blocks',
		'flex',
		'flex-col',
		className,
		metadata?.classes,
	]}
	{...metadata?.attributes}
>
	<Link
		link={link}
		class:list={[
			'button',
			'inline-block',
			`font--${size}`,
			`buttonText--${color}`,
			`buttonTextActive--${colorActive}`,
			`buttonBg--${bg}`,
			`buttonBgActive--${bgActive}`,
			`buttonBorderActive--${buttonBorderColorActive}`,
			'transition-all',
			'duration-300',
			align === 'start' || align === 'normal'
				? 'mr-auto'
				: align === 'center'
				? 'mx-auto'
				: align === 'end' && 'ml-auto',
		]}
	/>
</div>

<style
	lang="css"
	is:global
	define:vars={{
		buttonFont,
		buttonPadding,
		buttonBorderRadius,
		buttonBorderWidth,
		buttonBorderColor,
	}}
>
	.button {
		@apply rounded-[var(--buttonBorderRadius)] border-[length:var(--buttonBorderWidth)] border-[color:var(--borderColor)];
		padding: var(--buttonPadding) calc(var(--buttonPadding) * 2);
		font-family: var(--buttonFont);
	}

	.buttonText--primary {
		@apply text-primary;
	}

	.buttonText--secondary {
		@apply text-secondary;
	}

	.buttonText--tertiary {
		@apply text-tertiary;
	}
	.buttonText--black {
		@apply text-black;
	}
	.buttonText--white {
		@apply text-white;
	}
	.buttonText--transparent {
		@apply text-transparent;
	}
	.buttonText--primary {
		@apply hover:text-primary;
	}

	.buttonTextActive--secondary {
		@apply hover:text-secondary;
	}

	.buttonTextActive--tertiary {
		@apply hover:text-tertiary;
	}
	.buttonTextActive--black {
		@apply hover:text-black;
	}
	.buttonTextActive--white {
		@apply hover:text-white;
	}
	.buttonTextActive--transparent {
		@apply hover:text-transparent;
	}

	.buttonBgActive--primary {
		@apply hover:bg-primary;
	}

	.buttonBgActive--secondary {
		@apply hover:bg-secondary;
	}

	.buttonBgActive--tertiary {
		@apply hover:bg-tertiary;
	}

	.buttonBgActive--black {
		@apply hover:bg-black;
	}

	.buttonBgActive--white {
		@apply hover:bg-white;
	}

	.buttonBorderActive--primary {
		@apply hover:border-primary;
	}

	.buttonBorderActive--secondary {
		@apply hover:border-secondary;
	}

	.buttonBorderActive--tertiary {
		@apply hover:border-tertiary;
	}

	.buttonBorderActive--black {
		@apply hover:border-black;
	}

	.buttonBorderActive--white {
		@apply hover:border-white;
	}

	.buttonBorderActive--transparent {
		@apply hover:border-transparent;
	}
</style>
