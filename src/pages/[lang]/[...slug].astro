---
import {
	getLanguageContext,
	getGlobal,
	getAllPages,
	getData,
	type GlobalData,
} from '@lib/api';
import PageRenderer from '@components/PageRenderer.astro';

export async function getStaticPaths() {
	const { allLangs, prefixDefaultLocale, translations } =
		await getLanguageContext();

	// Determine which languages to generate paths for
	const languagesToGenerate = !prefixDefaultLocale
		? translations
		: allLangs.map((lang) => lang.code);

	let paths: { params: { lang: string; slug: string } }[] = [];

	for (const langCode of languagesToGenerate) {
		// Use the API function to get all pages
		const pages = await getAllPages(langCode);

		paths.push(
			...pages.map((item) => ({
				params: {
					lang: langCode,
					slug: item.uri,
				},
			}))
		);
	}

	return paths;
}

const { lang, slug } = Astro.params;
const global = await getData<GlobalData>(`/${lang}/global.json`);
---

<PageRenderer slug={slug} lang={lang} global={global} />
