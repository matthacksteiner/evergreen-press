---
import { getData, getLanguages } from '@lib/api.js';
import BaseLayout from '@layouts/BaseLayout.astro';
import Templates from '@components/Templates.astro';
import Layouts from '@components/Layouts.astro';
const API_URL = import.meta.env.KIRBY_URL;

export async function getStaticPaths() {
	const API_URL = import.meta.env.KIRBY_URL as string;
	const languages = await getLanguages();
	const allLang = languages.allLang.map(({ code }) => code);
	const paths = (
		await Promise.all(
			allLang.map(async (lang) => {
				const pagesResponse = await fetch(API_URL + '/' + lang + '/index.json');
				const data = (await pagesResponse.json()) as {
					uri: string;
					intendedTemplate: string;
				}[];
				return data
					.filter(({ uri }) => uri !== 'home')
					.map(({ uri, intendedTemplate }) => ({
						params: { lang, slug: uri },
						props: { template: intendedTemplate },
					}));
			})
		)
	).flat();
	return paths;
}

const { lang, slug } = Astro.params;
const { template } = Astro.props;
const global = await getData(`/${lang}/global.json`);
const pagesResponse = await fetch(API_URL + '/' + lang + '/' + slug + '.json');
if (!pagesResponse) throw Astro.redirect('/404');
const data = await pagesResponse.json();
const pageTitle = data.title;
---

<BaseLayout pageTitle={pageTitle} data={data} global={global}>
	{
		template === 'section' ? (
			<Templates data={data} global={global} template={template} />
		) : (
			<Layouts layouts={data.layouts} data={data} global={global} />
		)
	}
</BaseLayout>
