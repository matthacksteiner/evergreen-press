---
import {
	getPage,
	getLanguages,
	getGlobal,
	getSections,
	getAllPages,
	getData,
	type PageData,
	type GlobalData,
} from '@lib/api';
import BaseLayout from '@layouts/BaseLayout.astro';
import Layouts from '@components/Layouts.astro';

export async function getStaticPaths() {
	const global = await getGlobal();
	const prefixDefaultLocale = global.prefixDefaultLocale;
	const languages = await getLanguages();
	const allLang = !prefixDefaultLocale
		? languages.translations.map((lang: any) => lang.code)
		: languages.allLang.map((lang: any) => lang.code);

	let paths: { params: { lang: string; slug: string } }[] = [];

	for (const lang of allLang) {
		// Use the new API function to get all pages
		const pages = await getAllPages(lang);

		paths.push(
			...pages.map((item) => ({
				params: {
					lang: lang,
					slug: item.uri,
				},
			}))
		);
	}

	return paths;
}

const { lang, slug } = Astro.params;
const global = await getData<GlobalData>(`/${lang}/global.json`);
const data = await getPage(slug as string, lang);
const pageTitle = data.title;
---

<BaseLayout pageTitle={pageTitle} data={data} global={global}>
	<Layouts layouts={data.layouts} data={data} global={global} />
</BaseLayout>
